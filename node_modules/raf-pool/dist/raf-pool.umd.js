(function (global, factory) {
	typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :
	typeof define === 'function' && define.amd ? define(factory) :
	(global.rafPool = factory());
}(this, (function () { 'use strict';

	function unwrapExports (x) {
		return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x.default : x;
	}

	function createCommonjsModule(fn, module) {
		return module = { exports: {} }, fn(module, module.exports), module.exports;
	}

	var es = createCommonjsModule(function (module, exports) {
	Object.defineProperty(exports, "__esModule", { value: true });
	/**
	 * ensure use on requestAnimationFrame, no matter how many components
	 * on the page are using this mixin
	 *
	 * @class RAFAdmin
	 * @public
	 */
	var RAFAdmin = /** @class */ (function () {
	    function RAFAdmin() {
	        this.pool = [];
	        this.flush();
	    }
	    /**
	     * @method flush
	     * @public
	     */
	    RAFAdmin.prototype.flush = function () {
	        var _this = this;
	        window.requestAnimationFrame(function () {
	            // assign to a variable to avoid ensure no race conditions happen
	            // b/w flushing the pool and interating through the pool
	            var pool = _this.pool;
	            _this.reset();
	            pool.forEach(function (item) {
	                item[Object.keys(item)[0]]();
	            });
	            _this.flush();
	        });
	    };
	    /**
	     * @method add
	     * @public
	     */
	    RAFAdmin.prototype.add = function (elementId, fn) {
	        var _a;
	        this.pool.push((_a = {}, _a[elementId] = fn, _a));
	        return fn;
	    };
	    /**
	     * @method remove
	     * @public
	     */
	    RAFAdmin.prototype.remove = function (elementId) {
	        this.pool = this.pool.filter(function (obj) {
	            return !obj[elementId];
	        });
	    };
	    /**
	     * @method reset
	     * @public
	     */
	    RAFAdmin.prototype.reset = function () {
	        this.pool = [];
	    };
	    return RAFAdmin;
	}());
	exports.default = RAFAdmin;

	});

	var index = unwrapExports(es);

	return index;

})));
