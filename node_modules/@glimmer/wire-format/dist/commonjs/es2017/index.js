'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.isMaybeLocal = exports.isGet = exports.isFlushElement = exports.Ops = undefined;

var _opcodes = require('./lib/opcodes');

Object.defineProperty(exports, 'Ops', {
    enumerable: true,
    get: function () {
        return _opcodes.Opcodes;
    }
});
exports.is = is;
exports.isAttribute = isAttribute;
exports.isArgument = isArgument;
function is(variant) {
    return function (value) {
        return Array.isArray(value) && value[0] === variant;
    };
}
// Statements
const isFlushElement = exports.isFlushElement = is(_opcodes.Opcodes.FlushElement);
function isAttribute(val) {
    return val[0] === _opcodes.Opcodes.StaticAttr || val[0] === _opcodes.Opcodes.DynamicAttr || val[0] === _opcodes.Opcodes.ComponentAttr || val[0] === _opcodes.Opcodes.TrustingAttr || val[0] === _opcodes.Opcodes.TrustingComponentAttr || val[0] === _opcodes.Opcodes.AttrSplat;
}
function isArgument(val) {
    return val[0] === _opcodes.Opcodes.StaticArg || val[0] === _opcodes.Opcodes.DynamicArg;
}
// Expressions
const isGet = exports.isGet = is(_opcodes.Opcodes.Get);
const isMaybeLocal = exports.isMaybeLocal = is(_opcodes.Opcodes.MaybeLocal);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,