{
  "_from": "ember-uploader@^2.0.0",
  "_id": "ember-uploader@2.0.0",
  "_inBundle": false,
  "_integrity": "sha512-TGj2BCUtbp+JvUG2mwMMi3uoDc951rc+JkLUak6QCMCkJ+t0x1rz05qBFaenpvd01N63IRSOH+X9X+MxXpVdIg==",
  "_location": "/ember-uploader",
  "_phantomChildren": {
    "amd-name-resolver": "1.2.0",
    "babel-plugin-debug-macros": "0.2.0",
    "babel-plugin-ember-modules-api-polyfill": "2.8.0",
    "babel-plugin-transform-es2015-modules-amd": "6.24.1",
    "babel-polyfill": "6.26.0",
    "babel-preset-env": "1.7.0",
    "broccoli-babel-transpiler": "6.5.1",
    "broccoli-debug": "0.6.5",
    "broccoli-funnel": "2.0.2",
    "broccoli-source": "1.1.0",
    "clone": "2.1.2",
    "ember-cli-version-checker": "2.2.0",
    "semver": "5.7.0"
  },
  "_requested": {
    "escapedName": "ember-uploader",
    "fetchSpec": "^2.0.0",
    "name": "ember-uploader",
    "raw": "ember-uploader@^2.0.0",
    "rawSpec": "^2.0.0",
    "registry": true,
    "saveSpec": null,
    "type": "range"
  },
  "_requiredBy": [
    "#DEV:/",
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/ember-uploader/-/ember-uploader-2.0.0.tgz",
  "_shasum": "a8272af1c55e0f51a707364364085995a533c3ee",
  "_shrinkwrap": null,
  "_spec": "ember-uploader@^2.0.0",
  "_where": "/home/daniel/Documents/web-miniproject/client",
  "author": {
    "email": "digitaltoad@gmail.com",
    "name": "Joshua Borton"
  },
  "bugs": {
    "url": "https://github.com/benefitcloud/ember-uploader/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "ember-cli-babel": "^6.6.0"
  },
  "deprecated": false,
  "description": "Ember.js addon to facilitate uploading",
  "devDependencies": {
    "broccoli-asset-rev": "^2.4.5",
    "ember-cli": "~3.1.4",
    "ember-cli-app-version": "^3.2.0",
    "ember-cli-dependency-checker": "^2.0.0",
    "ember-cli-eslint": "^4.2.1",
    "ember-cli-htmlbars": "^2.0.1",
    "ember-cli-htmlbars-inline-precompile": "^1.0.0",
    "ember-cli-inject-live-reload": "^1.4.1",
    "ember-cli-mirage": "^0.4.7",
    "ember-cli-qunit": "^4.1.1",
    "ember-cli-shims": "^1.2.0",
    "ember-cli-sri": "^2.1.0",
    "ember-cli-uglify": "^2.0.0",
    "ember-disable-prototype-extensions": "^1.1.2",
    "ember-export-application-global": "^2.0.0",
    "ember-load-initializers": "^1.0.0",
    "ember-maybe-import-regenerator": "^0.1.6",
    "ember-resolver": "^4.0.0",
    "ember-sinon": "^2.1.0",
    "ember-sinon-qunit": "3.1.0",
    "ember-source": "~3.1.2",
    "ember-source-channel-url": "^1.1.0",
    "ember-try": "^0.2.23",
    "eslint-plugin-ember": "^5.2.0",
    "eslint-plugin-node": "^6.0.1",
    "loader.js": "^4.2.3"
  },
  "directories": {
    "doc": "doc",
    "test": "tests"
  },
  "ember-addon": {
    "configPath": "tests/dummy/config",
    "versionCompatibility": {
      "ember": ">=1.13"
    }
  },
  "engines": {
    "node": "^4.5 || 6.* || >= 7.*"
  },
  "homepage": "https://github.com/benefitcloud/ember-uploader",
  "keywords": [
    "ember-addon",
    "uploader",
    "uploading"
  ],
  "license": "MIT",
  "name": "ember-uploader",
  "optionalDependencies": {},
  "readme": "# Ember Uploader [![Build Status](https://travis-ci.org/benefitcloud/ember-uploader.svg?branch=master)](https://travis-ci.org/benefitcloud/ember-uploader) [![Ember Observer Score](https://emberobserver.com/badges/ember-uploader.svg)](https://emberobserver.com/addons/ember-uploader)\n\nAn Ember.js file uploader that works with any browser that supports\n[FormData](http://caniuse.com/#search=FormData).\n\n## Getting Started\n\nEmber Uploader is a Ember CLI compatible addon and can be installed as such.\n\n```\nember install ember-uploader\n```\n\n#### Basic Setup\nCreate a new component called `file-upload` and extend `EmberUploader.FileField` provided by\nember-uploader. If you're using `EmberUploader.FileField`, it will\nautomatically give you an input field, and will set `files` property when you\nchoose a file.\n\n```js\nimport FileField from 'ember-uploader/components/file-field';\nimport Uploader from 'ember-uploader/uploaders/uploader';\n\nexport default FileField.extend({\n  filesDidChange(files) {\n    const uploader = Uploader.create({\n      url: this.get('url')\n    });\n\n    if (!Ember.isEmpty(files)) {\n      // this second argument is optional and can to be sent as extra data with the upload\n      uploader.upload(files[0], { whateverObject });\n    }\n  }\n});\n```\n\nCall the component, pass it the url, and thats it!\n```hbs\n{{file-upload url=\"/upload\"}}\n```\n\n#### Ajax Request Method\nBy default, the request will be sent as `POST`. To override that, set `method` when\ncreating the object:\n\n```js\nimport Uploader from 'ember-uploader/uploaders/uploader';\n\nconst uploader = Uploader.create({\n  url: '/upload',\n  method: 'PUT'\n});\n```\n\n#### Change Namespace\n\n```js\nimport Uploader from 'ember-uploader/uploaders/uploader';\n\nconst uploader = Uploader.create({\n  paramNamespace: 'post'\n});\n\n// will be sent as -> post[file]=...\n```\n\n#### Change Parameters\nBy default parameter will be `file`\n\n```js\nimport Uploader from 'ember-uploader/uploaders/uploader';\n\nconst upload = Uploader.create({\n  paramName: 'upload'\n});\n\n// will be sent as -> upload=...\n```\n\n#### Progress\n\n```js\nuploader.on('progress', e => {\n  // Handle progress changes\n  // Use `e.percent` to get percentage\n});\n```\n\n#### Finished Uploading\n\n```js\nuploader.on('didUpload', e => {\n  // Handle finished upload\n});\n```\n\n#### Failed Uploading\n\n```js\nuploader.on('didError', (jqXHR, textStatus, errorThrown) => {\n  // Handle unsuccessful upload\n});\n```\n\n#### Response\nReturned value from uploader will be a promise\n\n```js\nuploader.upload(file).then(data => {\n  // Handle success\n}, error => {\n  // Handle failure\n})\n```\n\n#### Multiple files\n```js\nimport FileField from 'ember-uploader/components/file-field';\nimport Uploader from 'ember-uploader/uploaders/uploader';\n\nexport default FileField.extend({\n  multiple: true,\n  url: 'http://example.com/upload',\n\n  filesDidChange(files) {\n    const uploader = Uploader.create({\n      url: this.get('url')\n    });\n\n    if (!Ember.isEmpty(files)) {\n      // this second argument is optional and can to be sent as extra data with the upload\n      uploader.upload(files, { whatheverObject });\n    }\n  }\n});\n```\n\n### Modifying the request\nEmber uploader uses jQuery.ajax under the hood so it accepts the same\najax settings via the `ajaxSettings` property which is then merged with any\nsettings required by Ember Uploader. Here we modify the headers sent with\nthe request.\n\n```js\nimport Uploader from 'ember-uploader/uploaders/uploader';\n\nexport default Uploader.extend({\n  ajaxSettings: {\n    headers: {\n      'X-Application-Name': 'Uploader Test'\n    }\n  }\n});\n```\n\n#### Uploading to S3\n\nUploading to S3 works in similar manner to the default uploader. There is only\none extra step required before uploading.\n\nYou'll need to setup your backend to be able to sign the upload request, to be\nable to make an authenticated request to S3. This step is required to avoid\nsaving secret token on your client.\n\n```js\nimport FileField from 'ember-uploader/components/file-field';\nimport Uploader from 'ember-uploader/uploaders/uploader';\n\nexport default FileField.extend({\n  signingUrl: '',\n\n  filesDidChange(files) {\n    const uploader = S3Uploader.create({\n      signingUrl: this.get('signingUrl')\n    });\n\n    uploader.on('didUpload', response => {\n      // S3 will return XML with url\n      let uploadedUrl = $(response).find('Location')[0].textContent;\n      // http://yourbucket.s3.amazonaws.com/file.png\n      uploadedUrl = decodeURIComponent(uploadedUrl);\n    });\n\n    if (!Ember.isEmpty(files)) {\n      // Send a sign request then upload to S3\n      // this second argument is optional and can to be sent as extra data with the upload\n      uploader.upload(files[0], { whatheverObject });\n    }\n  }\n});\n\n```\n\nFor learning how to setup the backend, check the\n[wiki](https://github.com/benefitcloud/ember-uploader/wiki/S3-Server-Setup)\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding\nstyle. Add unit tests for any new or changed functionality.\n\nEmber Uploader uses [node.js](http://nodejs.org) and\n[Ember CLI](https://ember-cli.com/) for builds and tests. You will need to have\nthese tools installed if you would like to build Ember Uploader.\n\n```sh\n$ npm install -g ember-cli\n```\n\nTo get started with development simply do a `yarn install` inside the cloned\nrepository to install all dependencies needed for running\n[Ember CLI](http://www.ember-cli.com/).\n\nLint and test your code using: `ember test`.\n\n## Thank you\nThe Ember team, its contributors and community for being awesome. Also thank\nyou to [Erik Bryn](http://twitter.com/ebryn) and the contributors behind\n[ember-model](http://github.com/ebryn/ember-model) as well as\n[TJ Holowaychuk](http://twitter.com/tjholowaychuk) for\n[component/upload](http://github.com/component/upload).\n\n## License\nCopyright (c) 2014 Joshua Borton\nLicensed under the MIT license.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/benefitcloud/ember-uploader.git"
  },
  "scripts": {
    "build": "ember build",
    "lint:js": "eslint ./*.js addon addon-test-support app config lib server test-support tests",
    "start": "ember serve",
    "test": "ember try:each"
  },
  "title": "Ember Uploader",
  "version": "2.0.0"
}
